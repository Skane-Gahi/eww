; Variables
(defpoll is-wifi :interval "1s" `sh scripts/wifi/is_active.sh`)
(defpoll connected-wifi 
  :interval "1s" 
  :initial "Not connected" 
  :run-while is-wifi 
  `sh scripts/wifi/get_connected.sh`
)
(defpoll is-bluetooth :interval "1s" `sh scripts/bluetooth/is_active.sh`)

; Widgets
(defwidget ctrl-system []
  (box
    :hexpand true
    :vexpand true
    :orientation "h"
    :spacing 10
    :space-evenly false
    (box
      :orientation "v"
      :spacing 10
      :space-evenly false
      (box
        :class "control-item"
        :hexpand false
        :spacing 20
        :space-evenly false
        (box
          :class "icon-container ${is-wifi ? 'active' : 'inactive'}"
          :halign "end"
          :valign "center"
          (button
            :onclick "sh ./scripts/wifi/turn.sh ${is-wifi ? 'off' : 'on'}"
            (image
              :path "assets/wifi-${is-wifi ? 'light' : 'dark'}.svg"
              :image-height 30
              :image-width 30
            )
          )
        )
        (label 
          :text "${is-wifi ? connected-wifi : 'Service OFF'}"
        )
        (image
          :path "assets/caret-down.svg"
          :image-width 20 
        )
      )
      (box
        :class "control-item"
        :hexpand false
        :spacing 20
        :space-evenly false
        (box
          :class "icon-container ${is-bluetooth ? active : inactive}"
          :halign "end"
          :valign "center"
          (button
            :onclick "sh ./scripts/bluetooth/turn.sh ${is-bluetooth ? off : on}"
            (image
              :path "assets/bluetooth-${is-bluetooth ? light : dark}.svg"
              :image-height 30
              :image-width 30
            )
          )
        )
        (label 
          :text "${is-bluetooth ? connected-wifi : Service OFF}"
        )
        (image
          :path "assets/caret-down.svg"
          :image-width 20 
        )
      )
    )
    (box
      :orientation "v"
      :spacing 10
      :space-evenly false
      (box
        :class "control-item"
        (box
          :class "icon-container ${is-bluetooth ? active : inactive}"
          (image
            :path "assets/switcher-${is-bluetooth ? light : dark}.svg"
            :image-height 30
            :image-width 30
          )
        )
      )
      (box
        :class "control-item"
        (box
          :class "icon-container ${is-bluetooth ? active : inactive}"
          (image
            :path "assets/disturb-${is-bluetooth ? light : dark}.svg"
            :image-height 30
            :image-width 30
          )
        )
      )
    )
  ) 
)